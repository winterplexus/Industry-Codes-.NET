@{
    ViewBag.Title = "Search NAICS/SIC Codes By Keyword";
}

@model IndustryCodes.ViewModels.SearchByKeywordViewModel

<section id="messages">
    @Html.ValidationMessage("ErrorMessage")
</section>

<section id="keywordform">
    <br />
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title" contenteditable="true">@ViewBag.Title</h3>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("SearchByKeyword", "SearchByKeyword", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="col-sm-2">@Html.LabelFor(m => m.Keyword):</div>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.Keyword, new { ssize = "100", maxlength = "255", title = "Enter a keyword that can be found in either NAICS descriptions or SIC descriptions" })
                        @Html.ValidationMessageFor(m => m.Keyword)
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="row">
                    <div class="col-sm-2"></div>
                    <div class="col-sm-8">
                        @Html.LabelFor(m => m.SearchNAICS)&nbsp;
                        @Html.RadioButton("KeywordOption", "NAICS", Model.SearchNAICS)&nbsp;
                        @Html.LabelFor(m => m.SearchSIC)&nbsp;
                        @Html.RadioButton("KeywordOption", "SIC", Model.SearchSIC)
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-3">
                        <input type="submit" name="SearchButton" value="Search" class="btn btn-primary btn-sm" title="Search for codes, descriptions using given keyword" />&nbsp;
                        <input type="submit" name="ClearButton" value="Clear" class="btn btn-default btn-sm" title="Clear search output" />
                    </div>
                    <div class="col-sm-9"></div>
                </div>
                if (Model.SearchResults != null || !string.IsNullOrEmpty(Model.Keyword))
                {
                    <br />

                    <div class="row">
                        <div class="col-sm-12">
                            Number of records found:
                            @Html.DisplayFor(m => m.SearchResults.Count)
                        </div>
                    </div>
                }
                if (Model.SearchResults != null && Model.SearchResults.Count > 0)
                {
                    <br />
                    <div class="well well-sm">
                        <table class="table table-striped table-condensed">
                            <thead>
                                <tr>
                                    <td class="col-sm-1">Action</td>
                                    <th class="col-sm-1">NAICS</th>
                                    <th class="col-sm-1">SIC</th>
                                    <th class="col-sm-9">Industry Classification</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.SearchResults)
                                {
                                    <tr>
                                        <td>@Html.ActionLink("View", "SearchDetail", new { Id = item.ID, Model.Keyword, Model.SearchNAICS })</td>
                                        <td>@{ var item1 = item; } @Html.DisplayFor(m => item1.NORTH_AMERICAN_CODE)</td>
                                        <td>@{ var item2 = item; } @Html.DisplayFor(m => item2.STANDARD_CODE)</td>
                                        @if (Model.SearchNAICS)
                                        {
                                            <td>@{ var item3 = item; } @Html.DisplayFor(m => item3.NORTH_AMERICAN_DESCRIPTION)</td>
                                        }
                                        else
                                        {
                                            <td>@{ var item3 = item; } @Html.DisplayFor(m => item3.STANDARD_DESCRIPTION)</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div id='to-page-top'>Scroll To Top</div>
                }
            }
        </div>
    </div>
</section>    